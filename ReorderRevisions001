import clr
import sys

clr.AddReference("RevitAPI")
clr.AddReference("RevitAPIUI")
from Autodesk.Revit.DB import * 
from System.Collections.Generic import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager 
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument

 
def reverseDate(dates): 
	"""Receives a date in the format dd/mm/yy returns it in the form yy/mm/dd"""
	reversed_dates = []
	for date in dates: 
		d = date.split("/")
		d.reverse()
		e = "".join(d)
		
		reversed_dates.append(e)	
	return reversed_dates

	
#get str representation of all revisions
rev_ids_str = Revision.GetAllRevisionIds(doc)

#Get information - native Revit id / description field and date 
rev_ids= [doc.GetElement(id) for id in rev_ids_str]
descriptions = [e.Description for e in rev_ids]
dates = [e.RevisionDate for e in rev_ids]
sequence = [e.SequenceNumber for e in rev_ids]
segments = reverseDate(dates)

rev_info = zip(sequence,dates,descriptions, segments, rev_ids)
rev_info.sort(key = lambda x : x[3])

sorted_revisions = [rev[4] for rev in rev_info]

dyn_revisions = IN[0]

i_list = List[ElementId](rev_ids_str)
test = Revision.ReorderRevisionSequence(doc,i_list)

OUT = rev_info
